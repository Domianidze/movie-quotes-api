openapi: 3.0.0
info:
  title: Movie Quotes API
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: local server
  - url: 
    description: production server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /signup:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            example:
                username: testuser
                email: testuser@gmail.com
                password: testuser123
                redirectOnConfirm: http://localhost:3000/verify-account
                language: en
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                redirectOnConfirm:
                  type: string
                  required: true
                language:
                  type: string
      responses:
        '201':
          description: Signed up successfully!
          content:
            application/json:
              example:
                message: Signed up successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Username or Email is already taken.
          content:
            application/json:
              example:
                message: Username or Email is already taken.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /login:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            example:
                user: testuser
                password: testuser123
                rememberMe: false
            schema:
              type: object
              properties:
                user:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
                rememberMe:
                  type: boolean
                  required: true
      responses:
        '200':
          description: Logged in successfully!
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RAdGVzdC5jb20iLCJ1c2VySWQiOiI2MmE0OGQ0OGQyYzM2YjM3MjQxYThmNWIiLCJpYXQiOjE2NTUyMzIzMjQsImV4cCI6MTY1NTIzNTkyNH0.VG9OmL4PLbeR2oGMTmhAFd09Sn4OTmaC6T9sXiwWXdA
                id: 62a48d48d2c36b37241a8f5b
                username: testuser
                expiresIn: 1h
              schema:
                type: object
                properties:
                  token:
                    type: string
                    required: true
                  id:
                    type: string
                    required: true
                  username:
                    type: string
                    required: true
                  expiresIn:
                    type: string
                    required: true
        '403':
          description: Account is not activated.
          content:
            application/json:
              example:
                message: Account is not activated.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Invalid credentials.
          content:
            application/json:
              example:
                message: Invalid credentials.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /verify-account:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyZGVjYzZmMjYxMDZhNTEwZWQyNjg0ZSIsImlhdCI6MTY1ODc2ODQ5NSwiZXhwIjoxNjU4NzcyMDk1fQ.x8MHRNLbBOJgHZ1ORLfsAkOUQ1ZhULe4fFk5dCoCnJ4
            schema:
              type: object
              properties:
                token:
                  type: string
                  required: true
      responses:
        '200':
          description: Account verified successfully!
          content:
            application/json:
              example:
                message: Account verified successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Account not found.
          content:
            application/json:
              example:
                message: Account not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '409':
          description: Account is already verified.
          content:
            application/json:
              example:
                message: Account is already verified.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Invalid token.
          content:
            application/json:
              example:
                message: Invalid token.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /resend-verify:
    post:
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            example:
                user: testuser@gmail.com
                redirectOnConfirm: http://localhost:3000/confirm-account
                language: en
            schema:
              type: object
              properties:
                user:
                  type: string
                  required: true
                redirectOnConfirm:
                  type: string
                  required: true
                language:
                  type: string
      responses:
        '200':
          description: Account verify email sent!
          content:
            application/json:
              example:
                message: Account verify email sent!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Account not found.
          content:
            application/json:
              example:
                message: Account not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '409':
          description: Account is already verified.
          content:
            application/json:
              example:
                message: Account is already verified.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Invalid token.
          content:
            application/json:
              example:
                message: Invalid token.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /google/auth:
    post:
      tags:
        - Google Auth
      requestBody:
        content:
          application/json:
            example:
                name: testuser
                email: testuser@gmail.com
            schema:
              type: object
              properties:
                name:
                  type: string
                  required: true
                email:
                  type: string
                  required: true
      responses:
        '200 / 201':
          description: Authenticated successfully!
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RAdGVzdC5jb20iLCJ1c2VySWQiOiI2MmE0OGQ0OGQyYzM2YjM3MjQxYThmNWIiLCJpYXQiOjE2NTUyMzIzMjQsImV4cCI6MTY1NTIzNTkyNH0.VG9OmL4PLbeR2oGMTmhAFd09Sn4OTmaC6T9sXiwWXdA
                id: '62a48d48d2c36b37241a8f5b'
              schema:
                type: object
                properties:
                  token:
                    type: string
                    required: true
                  id:
                    type: string
                    required: true
  /password/send-recovery-link:
    post:
      tags:
        - Password Recovery
      requestBody:
        content:
          application/json:
            example:
                email: testuser@gmail.com
                redirectOnConfirm: http://localhost:3000/recover-password
                language: en
            schema:
              type: object
              properties:
                user:
                  type: string
                  required: true
                redirectOnConfirm:
                  type: string
                  required: true
                language:
                  type: string
      responses:
        '200':
          description: Password recovery email sent!
          content:
            application/json:
              example:
                message: Password recovery email sent!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Account not found.
          content:
            application/json:
              example:
                message: Account not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /password/recover:
    post:
      tags:
        - Password Recovery
      requestBody:
        content:
          application/json:
            example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyZGVjYzZmMjYxMDZhNTEwZWQyNjg0ZSIsImlhdCI6MTY1ODc2ODQ5NSwiZXhwIjoxNjU4NzcyMDk1fQ.x8MHRNLbBOJgHZ1ORLfsAkOUQ1ZhULe4fFk5dCoCnJ4
                newPassword: testuser456
            schema:
              type: object
              properties:
                token:
                  type: string
                  required: true
                newPassword:
                  type: string
                  required: true
      responses:
        '200':
          description: Password recovered successfully!
          content:
            application/json:
              example:
                message: Password recovered successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Account not found.
          content:
            application/json:
              example:
                message: Account not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '409':
          description: Same password.
          content:
            application/json:
              example:
                message: Same password.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Invalid token.
          content:
            application/json:
              example:
                message: Invalid token.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /movies:
    get:
      tags:
        - Movie
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Get movies successfully!
          content:
            application/json:
              example:
                  - _id: 62a86e06451633b832d24238
                    nameEn: Interstellar
                    nameGe: ინტერსტელარი
                    tags:
                      - drama
                    directorEn: Christopher Nolan
                    directorGe: კრისტოფერ ნოლანი
                    descriptionEn: When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.
                    descriptionGe: კოსმონავტების ჯგუფი გამოუცნობი სამყაროს გამოსაკვლევად მიემართება და თავისი ხომალდით დედამიწასთან ახლოს მდებარე შავ ხვრელში შეფრინდებიან. ის მათ საშუალებას მისცემს გადაადგილდნენ წარმოუდგენელ მანძილებზე...
                    image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                    createdBy: 
                      id: 62a86e06451633b832d24238
                      username: testuser
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                    nameEn:
                      type: string
                      required: true
                    nameGe:
                      type: string
                      required: true
                    tags:
                      type: array
                      required: true
                    directorEn:
                      type: string
                      required: true
                    directorGe:
                      type: string
                      required: true
                    descriptionEn:
                      type: string
                      required: true
                    descriptionGe:
                      type: string
                      required: true
                    image:
                      type: string
                      required: true
                    createdBy:
                      type: object
                      required: true
                      properties:
                        id: 
                          type: string
                        username: 
                          type: string
  /movie/{id}:
    get:
      tags:
        - Movie
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get movie successfully!
          content:
            application/json:
              example:
                  _id: 62a86e06451633b832d24238
                  nameEn: Interstellar
                  nameGe: ინტერსტელარი
                  tags:
                    - drama
                  directorEn: Christopher Nolan
                  directorGe: კრისტოფერ ნოლანი
                  descriptionEn: When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.
                  descriptionGe: კოსმონავტების ჯგუფი გამოუცნობი სამყაროს გამოსაკვლევად მიემართება და თავისი ხომალდით დედამიწასთან ახლოს მდებარე შავ ხვრელში შეფრინდებიან. ის მათ საშუალებას მისცემს გადაადგილდნენ წარმოუდგენელ მანძილებზე...
                  image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                  createdBy: 
                    id: 62a86e06451633b832d24238
                    username: testuser
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    required: true
                  nameEn:
                    type: string
                    required: true
                  nameGe:
                    type: string
                    required: true
                  tags:
                    type: array
                    required: true
                  directorEn:
                    type: string
                    required: true
                  directorGe:
                    type: string
                    required: true
                  descriptionEn:
                    type: string
                    required: true
                  descriptionGe:
                    type: string
                    required: true
                  image:
                    type: string
                    required: true
                  createdBy:
                    type: object
                    required: true
                    properties:
                      id: 
                        type: string
                      username: 
                        type: string
        '404':
          description: Movie not found.
          content:
            application/json:
              example:
                message: Movie not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /movie:
    post:
      tags:
        - Movie
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nameEn:
                  type: string
                nameGe:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                directorEn:
                  type: string
                directorGe:
                  type: string
                descriptionEn:
                  type: string
                descriptionGe:
                  type: string
                image:
                  type: file
              required:
              - nameEn
              - nameGe
              - tags
              - directorEn
              - directorGe
              - descriptionEn
              - descriptionGe
              - image
      responses:
        '201':
          description: Movie added successfully!
          content:
            application/json:
              example:
                message: Movie added successfully!
                id: 62a48d48d2c36b37241a8f5b
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
                  id:
                    type: string
                    required: true
        '404':
          description: User not found.
          content:
            application/json:
              example:
                message: User not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Proper image not found.
          content:
            application/json:
              example:
                message: Proper image not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
    put:
      tags:
        - Movie
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                nameEn:
                  type: string
                nameGe:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                directorEn:
                  type: string
                directorGe:
                  type: string
                descriptionEn:
                  type: string
                descriptionGe:
                  type: string
                image:
                  type: file
              required:
              - id
      responses:
        '200':
          description: Movie updated successfully!
          content:
            application/json:
              example:
                message: Movie updated successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '401':
          description: Not authorized.
          content:
            application/json:
              example:
                message: Not authorized.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Movie not found.
          content:
            application/json:
              example:
                message: Movie not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
    delete:
      tags:
        - Movie
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            example:
                id: 62a86e06451633b832d24238
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
      responses:
        '200':
          description: Movie deleted successfully!
          content:
            application/json:
              example:
                message: Movie deleted successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '401':
          description: Not authorized.
          content:
            application/json:
              example:
                message: Not authorized.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Movie not found.
          content:
            application/json:
              example:
                message: Movie not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /search-quotes/{query}:
    get:
      tags:
        - Quote
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: query
          schema:
            type: string
      responses:
        '200':
          description: Search quotes successfully!
          content:
            application/json:
              example:
                  - _id: 62a86e06451633b832d24238
                    quoteEn: You have to leave something behind to go forward
                    quoteGe: წინ წასასვლელად რაღაც უნდა დატოვო
                    image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                    movie:
                      _id: 62a86e06451633b832d24238
                      nameEn: Interstellar
                      nameGe: ინტერსტელარი
                      tags:
                        - drama
                      directorEn: Christopher Nolan
                      directorGe: კრისტოფერ ნოლანი
                      descriptionEn: When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.
                      descriptionGe: კოსმონავტების ჯგუფი გამოუცნობი სამყაროს გამოსაკვლევად მიემართება და თავისი ხომალდით დედამიწასთან ახლოს მდებარე შავ ხვრელში შეფრინდებიან. ის მათ საშუალებას მისცემს გადაადგილდნენ წარმოუდგენელ მანძილებზე...
                      image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                    createdBy: 
                      id: 62a86e06451633b832d24238
                      username: testuser
                    likes:
                      - _id: 62a86e06451633b832d24238
                        likedBy:
                          id: 62a86e06451633b832d24238
                          username: testuser
                    comments:
                      - _id: 62a86e06451633b832d24238
                        comment: test comment
                        likedBy:
                          id: 62a86e06451633b832d24238
                          username: testuser
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                    quoteEn:
                      type: string
                      required: true
                    image:
                      type: string
                      required: true
                    movie:
                      type: object
                      required: true
                      properties:
                        _id:
                          type: string
                          required: true
                        nameEn:
                          type: string
                          required: true
                        nameGe:
                          type: string
                          required: true
                        tags:
                          type: array
                          required: true
                        directorEn:
                          type: string
                          required: true
                        directorGe:
                          type: string
                          required: true
                        descriptionEn:
                          type: string
                          required: true
                        descriptionGe:
                          type: string
                          required: true
                        image:
                          type: string
                          required: true
                    createdBy:
                      type: object
                      required: true
                      properties:
                        id: 
                          type: string
                        username: 
                          type: string
                    likes:
                      type: array
                      required: true
                    comments:
                      type: array
                      required: true
  /quotes/{page}:
    get:
      tags:
        - Quote
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: page
          schema:
            type: string
      responses:
        '200':
          description: Get quotes successfully!
          content:
            application/json:
              example:
                  - _id: 62a86e06451633b832d24238
                    quoteEn: You have to leave something behind to go forward
                    quoteGe: წინ წასასვლელად რაღაც უნდა დატოვო
                    image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                    movie:
                      _id: 62a86e06451633b832d24238
                      nameEn: Interstellar
                      nameGe: ინტერსტელარი
                      tags:
                        - drama
                      directorEn: Christopher Nolan
                      directorGe: კრისტოფერ ნოლანი
                      descriptionEn: When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.
                      descriptionGe: კოსმონავტების ჯგუფი გამოუცნობი სამყაროს გამოსაკვლევად მიემართება და თავისი ხომალდით დედამიწასთან ახლოს მდებარე შავ ხვრელში შეფრინდებიან. ის მათ საშუალებას მისცემს გადაადგილდნენ წარმოუდგენელ მანძილებზე...
                      image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                    createdBy: 
                      id: 62a86e06451633b832d24238
                      username: testuser
                    likes:
                      - _id: 62a86e06451633b832d24238
                        likedBy:
                          id: 62a86e06451633b832d24238
                          username: testuser
                    comments:
                      - _id: 62a86e06451633b832d24238
                        comment: test comment
                        likedBy:
                          id: 62a86e06451633b832d24238
                          username: testuser
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      required: true
                    quoteEn:
                      type: string
                      required: true
                    image:
                      type: string
                      required: true
                    movie:
                      type: object
                      required: true
                      properties:
                        _id:
                          type: string
                          required: true
                        nameEn:
                          type: string
                          required: true
                        nameGe:
                          type: string
                          required: true
                        tags:
                          type: array
                          required: true
                        directorEn:
                          type: string
                          required: true
                        directorGe:
                          type: string
                          required: true
                        descriptionEn:
                          type: string
                          required: true
                        descriptionGe:
                          type: string
                          required: true
                        image:
                          type: string
                          required: true
                    createdBy:
                      type: object
                      required: true
                      properties:
                        id: 
                          type: string
                        username: 
                          type: string
                    likes:
                      type: array
                      required: true
                    comments:
                      type: array
                      required: true
  /quote/{id}:
    get:
      tags:
        - Quote
      security:
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get Quote successfully!
          content:
            application/json:
              example:
                _id: 62a86e06451633b832d24238
                quoteEn: You have to leave something behind to go forward
                quoteGe: წინ წასასვლელად რაღაც უნდა დატოვო
                image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                movie:
                  _id: 62a86e06451633b832d24238
                  nameEn: Interstellar
                  nameGe: ინტერსტელარი
                  tags:
                    - drama
                  directorEn: Christopher Nolan
                  directorGe: კრისტოფერ ნოლანი
                  descriptionEn: When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.
                  descriptionGe: კოსმონავტების ჯგუფი გამოუცნობი სამყაროს გამოსაკვლევად მიემართება და თავისი ხომალდით დედამიწასთან ახლოს მდებარე შავ ხვრელში შეფრინდებიან. ის მათ საშუალებას მისცემს გადაადგილდნენ წარმოუდგენელ მანძილებზე...
                  image: http://localhost:8080/storage\img\2022-08-01T11-02-23.061Z-interstellar.png
                createdBy: 
                  id: 62a86e06451633b832d24238
                  username: testuser
                likes:
                  - _id: 62a86e06451633b832d24238
                    likedBy:
                      id: 62a86e06451633b832d24238
                      username: testuser
                comments:
                  - _id: 62a86e06451633b832d24238
                    comment: test comment
                    likedBy:
                      id: 62a86e06451633b832d24238
                      username: testuser
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    required: true
                  quoteEn:
                    type: string
                    required: true
                  image:
                    type: string
                    required: true
                  movie:
                    type: object
                    required: true
                    properties:
                      _id:
                        type: string
                        required: true
                      nameEn:
                        type: string
                        required: true
                      nameGe:
                        type: string
                        required: true
                      tags:
                        type: array
                        required: true
                      directorEn:
                        type: string
                        required: true
                      directorGe:
                        type: string
                        required: true
                      descriptionEn:
                        type: string
                        required: true
                      descriptionGe:
                        type: string
                        required: true
                      image:
                        type: string
                        required: true
                  createdBy:
                    type: object
                    required: true
                    properties:
                      id: 
                        type: string
                      username: 
                        type: string
                  likes:
                    type: array
                    required: true
                  comments:
                    type: array
                    required: true
        '404':
          description: Quote not found.
          content:
            application/json:
              example:
                message: Quote not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /quote:
    post:
      tags:
        - Quote
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                quoteEn:
                  type: string
                quoteGe:
                  type: string
                image:
                  type: file
                movie:
                  type: string
              required:
              - quoteEn
              - quoteGe
              - image
              - movie
      responses:
        '201':
          description: Quote added successfully!
          content:
            application/json:
              example:
                message: Quote added successfully!
                id: 62a48d48d2c36b37241a8f5b
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
                  id:
                    type: string
                    required: true
        '404':
          description: Movie not found.
          content:
            application/json:
              example:
                message: Movie not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: User not found.
          content:
            application/json:
              example:
                message: User not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '422':
          description: Proper image not found.
          content:
            application/json:
              example:
                message: Proper image not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
    put:
      tags:
        - Quote
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                quoteEn:
                  type: string
                quoteGe:
                  type: string
                image:
                  type: file
              required:
                - id
      responses:
        '200':
          description: Quote updated successfully!
          content:
            application/json:
              example:
                message: Quote updated successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '401':
          description: Not authorized.
          content:
            application/json:
              example:
                message: Not authorized.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Quote not found.
          content:
            application/json:
              example:
                message: Quote not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
    delete:
      tags:
        - Quote
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            example:
                id: 62a86e06451633b832d24238
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
      responses:
        '200':
          description: Quote deleted successfully!
          content:
            application/json:
              example:
                message: Quote deleted successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '401':
          description: Not authorized.
          content:
            application/json:
              example:
                message: Not authorized.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Quote not found.
          content:
            application/json:
              example:
                message: Quote not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /like-quote:
    post:
      tags:
        - Quote
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            example:
                id: 62a86e06451633b832d24238
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
      responses:
        '200':
          description: Quote liked/unliked successfully!
          content:
            application/json:
              example:
                message: Quote liked/unliked successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Quote not found.
          content:
            application/json:
              example:
                message: Quote not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
  /quote-comment:
    post:
      tags:
        - Quote
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            example:
                comment: test comment
                id: 62a86e06451633b832d24238
            schema:
              type: object
              properties:
                comment:
                  type: string
                  required: true
                id:
                  type: string
                  required: true
      responses:
        '200':
          description: Commented on quote successfully!
          content:
            application/json:
              example:
                message: Commented on quote successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Quote not found.
          content:
            application/json:
              example:
                message: Quote not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
    delete:
      tags:
        - Quote
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            example:
                id: 62a86e06451633b832d24238
                quoteId: 62a86e06451633b832d24238
            schema:
              type: object
              properties:
                id:
                  type: string
                  required: true
                quoteId:
                  type: string
                  required: true
      responses:
        '200':
          description: Commented deleted successfully!
          content:
            application/json:
              example:
                message: Commented deleted successfully!
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '401':
          description: Not authorized.
          content:
            application/json:
              example:
                message: Not authorized.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true
        '404':
          description: Quote/Comment not found.
          content:
            application/json:
              example:
                message: Quote/Comment not found.
              schema:
                type: object
                properties:
                  message:
                    type: string
                    required: true